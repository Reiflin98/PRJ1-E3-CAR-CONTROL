
BIL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  0000090c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000898  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800200  00800200  0000090c  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  0000090c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000096c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  000009ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001484  00000000  00000000  00000ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f4e  00000000  00000000  00001f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000aae  00000000  00000000  00002eb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000260  00000000  00000000  00003964  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007b4  00000000  00000000  00003bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000348  00000000  00000000  00004378  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  000046c0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	7c c0       	rjmp	.+248    	; 0xfa <__ctors_end>
   2:	00 00       	nop
   4:	8c c0       	rjmp	.+280    	; 0x11e <__bad_interrupt>
   6:	00 00       	nop
   8:	8a c0       	rjmp	.+276    	; 0x11e <__bad_interrupt>
   a:	00 00       	nop
   c:	03 c1       	rjmp	.+518    	; 0x214 <__vector_3>
   e:	00 00       	nop
  10:	86 c0       	rjmp	.+268    	; 0x11e <__bad_interrupt>
  12:	00 00       	nop
  14:	84 c0       	rjmp	.+264    	; 0x11e <__bad_interrupt>
  16:	00 00       	nop
  18:	82 c0       	rjmp	.+260    	; 0x11e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	80 c0       	rjmp	.+256    	; 0x11e <__bad_interrupt>
  1e:	00 00       	nop
  20:	7e c0       	rjmp	.+252    	; 0x11e <__bad_interrupt>
  22:	00 00       	nop
  24:	7c c0       	rjmp	.+248    	; 0x11e <__bad_interrupt>
  26:	00 00       	nop
  28:	7a c0       	rjmp	.+244    	; 0x11e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	78 c0       	rjmp	.+240    	; 0x11e <__bad_interrupt>
  2e:	00 00       	nop
  30:	76 c0       	rjmp	.+236    	; 0x11e <__bad_interrupt>
  32:	00 00       	nop
  34:	74 c0       	rjmp	.+232    	; 0x11e <__bad_interrupt>
  36:	00 00       	nop
  38:	72 c0       	rjmp	.+228    	; 0x11e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	70 c0       	rjmp	.+224    	; 0x11e <__bad_interrupt>
  3e:	00 00       	nop
  40:	6e c0       	rjmp	.+220    	; 0x11e <__bad_interrupt>
  42:	00 00       	nop
  44:	6c c0       	rjmp	.+216    	; 0x11e <__bad_interrupt>
  46:	00 00       	nop
  48:	6a c0       	rjmp	.+212    	; 0x11e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	68 c0       	rjmp	.+208    	; 0x11e <__bad_interrupt>
  4e:	00 00       	nop
  50:	66 c0       	rjmp	.+204    	; 0x11e <__bad_interrupt>
  52:	00 00       	nop
  54:	64 c0       	rjmp	.+200    	; 0x11e <__bad_interrupt>
  56:	00 00       	nop
  58:	62 c0       	rjmp	.+196    	; 0x11e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	60 c0       	rjmp	.+192    	; 0x11e <__bad_interrupt>
  5e:	00 00       	nop
  60:	5e c0       	rjmp	.+188    	; 0x11e <__bad_interrupt>
  62:	00 00       	nop
  64:	5c c0       	rjmp	.+184    	; 0x11e <__bad_interrupt>
  66:	00 00       	nop
  68:	5a c0       	rjmp	.+180    	; 0x11e <__bad_interrupt>
  6a:	00 00       	nop
  6c:	58 c0       	rjmp	.+176    	; 0x11e <__bad_interrupt>
  6e:	00 00       	nop
  70:	56 c0       	rjmp	.+172    	; 0x11e <__bad_interrupt>
  72:	00 00       	nop
  74:	54 c0       	rjmp	.+168    	; 0x11e <__bad_interrupt>
  76:	00 00       	nop
  78:	52 c0       	rjmp	.+164    	; 0x11e <__bad_interrupt>
  7a:	00 00       	nop
  7c:	50 c0       	rjmp	.+160    	; 0x11e <__bad_interrupt>
  7e:	00 00       	nop
  80:	4e c0       	rjmp	.+156    	; 0x11e <__bad_interrupt>
  82:	00 00       	nop
  84:	4c c0       	rjmp	.+152    	; 0x11e <__bad_interrupt>
  86:	00 00       	nop
  88:	4a c0       	rjmp	.+148    	; 0x11e <__bad_interrupt>
  8a:	00 00       	nop
  8c:	48 c0       	rjmp	.+144    	; 0x11e <__bad_interrupt>
  8e:	00 00       	nop
  90:	46 c0       	rjmp	.+140    	; 0x11e <__bad_interrupt>
  92:	00 00       	nop
  94:	44 c0       	rjmp	.+136    	; 0x11e <__bad_interrupt>
  96:	00 00       	nop
  98:	42 c0       	rjmp	.+132    	; 0x11e <__bad_interrupt>
  9a:	00 00       	nop
  9c:	40 c0       	rjmp	.+128    	; 0x11e <__bad_interrupt>
  9e:	00 00       	nop
  a0:	3e c0       	rjmp	.+124    	; 0x11e <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3c c0       	rjmp	.+120    	; 0x11e <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3a c0       	rjmp	.+116    	; 0x11e <__bad_interrupt>
  aa:	00 00       	nop
  ac:	38 c0       	rjmp	.+112    	; 0x11e <__bad_interrupt>
  ae:	00 00       	nop
  b0:	36 c0       	rjmp	.+108    	; 0x11e <__bad_interrupt>
  b2:	00 00       	nop
  b4:	c0 c0       	rjmp	.+384    	; 0x236 <__vector_45>
  b6:	00 00       	nop
  b8:	32 c0       	rjmp	.+100    	; 0x11e <__bad_interrupt>
  ba:	00 00       	nop
  bc:	30 c0       	rjmp	.+96     	; 0x11e <__bad_interrupt>
  be:	00 00       	nop
  c0:	2e c0       	rjmp	.+92     	; 0x11e <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2c c0       	rjmp	.+88     	; 0x11e <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2a c0       	rjmp	.+84     	; 0x11e <__bad_interrupt>
  ca:	00 00       	nop
  cc:	28 c0       	rjmp	.+80     	; 0x11e <__bad_interrupt>
  ce:	00 00       	nop
  d0:	26 c0       	rjmp	.+76     	; 0x11e <__bad_interrupt>
  d2:	00 00       	nop
  d4:	24 c0       	rjmp	.+72     	; 0x11e <__bad_interrupt>
  d6:	00 00       	nop
  d8:	22 c0       	rjmp	.+68     	; 0x11e <__bad_interrupt>
  da:	00 00       	nop
  dc:	20 c0       	rjmp	.+64     	; 0x11e <__bad_interrupt>
  de:	00 00       	nop
  e0:	1e c0       	rjmp	.+60     	; 0x11e <__bad_interrupt>
  e2:	00 00       	nop
  e4:	a6 00       	.word	0x00a6	; ????
  e6:	ab 00       	.word	0x00ab	; ????
  e8:	b0 00       	.word	0x00b0	; ????
  ea:	b5 00       	.word	0x00b5	; ????
  ec:	c4 00       	.word	0x00c4	; ????
  ee:	c9 00       	.word	0x00c9	; ????
  f0:	ce 00       	.word	0x00ce	; ????
  f2:	d3 00       	.word	0x00d3	; ????
  f4:	d8 00       	.word	0x00d8	; ????
  f6:	dd 00       	.word	0x00dd	; ????
  f8:	e2 00       	.word	0x00e2	; ????

000000fa <__ctors_end>:
  fa:	11 24       	eor	r1, r1
  fc:	1f be       	out	0x3f, r1	; 63
  fe:	cf ef       	ldi	r28, 0xFF	; 255
 100:	d1 e2       	ldi	r29, 0x21	; 33
 102:	de bf       	out	0x3e, r29	; 62
 104:	cd bf       	out	0x3d, r28	; 61
 106:	00 e0       	ldi	r16, 0x00	; 0
 108:	0c bf       	out	0x3c, r16	; 60

0000010a <__do_clear_bss>:
 10a:	22 e0       	ldi	r18, 0x02	; 2
 10c:	a0 e0       	ldi	r26, 0x00	; 0
 10e:	b2 e0       	ldi	r27, 0x02	; 2
 110:	01 c0       	rjmp	.+2      	; 0x114 <.do_clear_bss_start>

00000112 <.do_clear_bss_loop>:
 112:	1d 92       	st	X+, r1

00000114 <.do_clear_bss_start>:
 114:	a1 30       	cpi	r26, 0x01	; 1
 116:	b2 07       	cpc	r27, r18
 118:	e1 f7       	brne	.-8      	; 0x112 <.do_clear_bss_loop>
 11a:	b6 d0       	rcall	.+364    	; 0x288 <main>
 11c:	bb c3       	rjmp	.+1910   	; 0x894 <_exit>

0000011e <__bad_interrupt>:
 11e:	70 cf       	rjmp	.-288    	; 0x0 <__vectors>

00000120 <initSystem>:

extern counter;

void initSystem()
{
 	initFrontLight();
 120:	75 d0       	rcall	.+234    	; 0x20c <initFrontLight>
 	initRearLight();
 122:	be d1       	rcall	.+892    	; 0x4a0 <initRearLight>
// 	initUnderglow();
// 	initMP3();
	initMotor();
 124:	c0 d0       	rcall	.+384    	; 0x2a6 <initMotor>
 126:	61 c0       	rjmp	.+194    	; 0x1ea <initSwitchPort>
	initSwitchPort();
 128:	08 95       	ret

0000012a <driveControl>:
 12a:	cf 93       	push	r28
 12c:	df 93       	push	r29
	
}

void driveControl()
{
	int ned_af_bakke = 0;
 12e:	c0 e0       	ldi	r28, 0x00	; 0
 130:	d0 e0       	ldi	r29, 0x00	; 0
	//_delay_ms(5000);
	//turnOnFront();
	//turnOnRear();
	//
	do{
		switch (counter)
 132:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 136:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <__bss_end>
 13a:	eb 30       	cpi	r30, 0x0B	; 11
 13c:	f1 05       	cpc	r31, r1
 13e:	08 f0       	brcs	.+2      	; 0x142 <driveControl+0x18>
 140:	45 c0       	rjmp	.+138    	; 0x1cc <driveControl+0xa2>
 142:	88 27       	eor	r24, r24
 144:	ee 58       	subi	r30, 0x8E	; 142
 146:	ff 4f       	sbci	r31, 0xFF	; 255
 148:	8f 4f       	sbci	r24, 0xFF	; 255
 14a:	9c c3       	rjmp	.+1848   	; 0x884 <__tablejump2__>
		{
		case 0:
			carDrive(30,2);
 14c:	62 e0       	ldi	r22, 0x02	; 2
 14e:	8e e1       	ldi	r24, 0x1E	; 30
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	df d0       	rcall	.+446    	; 0x312 <carDrive>
			break;
 154:	3b c0       	rjmp	.+118    	; 0x1cc <driveControl+0xa2>
		
		case 1: //Brik 1
			carDrive(50, 5); //Nedsæt hastigheden lidt (Bakke snart)
 156:	65 e0       	ldi	r22, 0x05	; 5
 158:	82 e3       	ldi	r24, 0x32	; 50
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	da d0       	rcall	.+436    	; 0x312 <carDrive>
			break;
 15e:	36 c0       	rjmp	.+108    	; 0x1cc <driveControl+0xa2>
			
		case 2: //Brik 2
			carDrive(80, 1); //Bakke start - hastighed ydeligere ned
 160:	61 e0       	ldi	r22, 0x01	; 1
 162:	80 e5       	ldi	r24, 0x50	; 80
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	d5 d0       	rcall	.+426    	; 0x312 <carDrive>
			break;
 168:	31 c0       	rjmp	.+98     	; 0x1cc <driveControl+0xa2>
			
		case 3: //Brik 3
			if (ned_af_bakke < 5000)
 16a:	c8 38       	cpi	r28, 0x88	; 136
 16c:	83 e1       	ldi	r24, 0x13	; 19
 16e:	d8 07       	cpc	r29, r24
			{
				carDrive(-17, 1); //Hastighed ned inden bakken kører ned
 170:	34 f4       	brge	.+12     	; 0x17e <driveControl+0x54>
 172:	61 e0       	ldi	r22, 0x01	; 1
 174:	8f ee       	ldi	r24, 0xEF	; 239
 176:	9f ef       	ldi	r25, 0xFF	; 255
 178:	cc d0       	rcall	.+408    	; 0x312 <carDrive>
				ned_af_bakke++;
 17a:	21 96       	adiw	r28, 0x01	; 1
				
			}else{
				carDrive(30, 7);
 17c:	27 c0       	rjmp	.+78     	; 0x1cc <driveControl+0xa2>
 17e:	67 e0       	ldi	r22, 0x07	; 7
 180:	8e e1       	ldi	r24, 0x1E	; 30
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	c6 d0       	rcall	.+396    	; 0x312 <carDrive>
			
			break;
		
			
		case 4: //Brik 4
			carDrive(70, 5); //HAstigheden op - bunden af bakken
 186:	22 c0       	rjmp	.+68     	; 0x1cc <driveControl+0xa2>
 188:	65 e0       	ldi	r22, 0x05	; 5
 18a:	86 e4       	ldi	r24, 0x46	; 70
 18c:	90 e0       	ldi	r25, 0x00	; 0
			break;
 18e:	c1 d0       	rcall	.+386    	; 0x312 <carDrive>
			
		case 5: //Brik 5
			carDrive(50, 10); //hastigheden lidt ned - gør klar til snart at stoppe
 190:	1d c0       	rjmp	.+58     	; 0x1cc <driveControl+0xa2>
 192:	6a e0       	ldi	r22, 0x0A	; 10
 194:	82 e3       	ldi	r24, 0x32	; 50
 196:	90 e0       	ldi	r25, 0x00	; 0
			break;
 198:	bc d0       	rcall	.+376    	; 0x312 <carDrive>
			
		case 6: //Brik 6
			carDrive(-30, 1); //Kør tilbage til refleksbrik 5
 19a:	18 c0       	rjmp	.+48     	; 0x1cc <driveControl+0xa2>
 19c:	61 e0       	ldi	r22, 0x01	; 1
 19e:	82 ee       	ldi	r24, 0xE2	; 226
 1a0:	9f ef       	ldi	r25, 0xFF	; 255
			break;
			
		case 7: //Brik 6
			carDrive(-50, 3); //Refelksbrik 6 igen
 1a2:	b7 d0       	rcall	.+366    	; 0x312 <carDrive>
 1a4:	13 c0       	rjmp	.+38     	; 0x1cc <driveControl+0xa2>
 1a6:	63 e0       	ldi	r22, 0x03	; 3
 1a8:	8e ec       	ldi	r24, 0xCE	; 206
			break;
 1aa:	9f ef       	ldi	r25, 0xFF	; 255
			
		case 8: //Brik 5
			carDrive(70, 1); //Kør frem igen
 1ac:	b2 d0       	rcall	.+356    	; 0x312 <carDrive>
 1ae:	0e c0       	rjmp	.+28     	; 0x1cc <driveControl+0xa2>
 1b0:	61 e0       	ldi	r22, 0x01	; 1
 1b2:	86 e4       	ldi	r24, 0x46	; 70
			break;
 1b4:	90 e0       	ldi	r25, 0x00	; 0
			
		case 9: //Brik 5
			carDrive(70, 4); //Kør frem igen
 1b6:	ad d0       	rcall	.+346    	; 0x312 <carDrive>
 1b8:	09 c0       	rjmp	.+18     	; 0x1cc <driveControl+0xa2>
 1ba:	64 e0       	ldi	r22, 0x04	; 4
 1bc:	86 e4       	ldi	r24, 0x46	; 70
 1be:	90 e0       	ldi	r25, 0x00	; 0
			break;
			
		case 10: //Brik 6
			carDrive(50, 7); //Kør frem igen	
 1c0:	a8 d0       	rcall	.+336    	; 0x312 <carDrive>
 1c2:	04 c0       	rjmp	.+8      	; 0x1cc <driveControl+0xa2>
 1c4:	67 e0       	ldi	r22, 0x07	; 7
 1c6:	82 e3       	ldi	r24, 0x32	; 50
 1c8:	90 e0       	ldi	r25, 0x00	; 0
			
			
			
		}

	}while (counter < 11); //Går ud af do-while når refliksbrik 7 er nået
 1ca:	a3 d0       	rcall	.+326    	; 0x312 <carDrive>
 1cc:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 1d0:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__bss_end>
 1d4:	0b 97       	sbiw	r24, 0x0b	; 11
 1d6:	0c f4       	brge	.+2      	; 0x1da <driveControl+0xb0>
	
	carStop();
 1d8:	ac cf       	rjmp	.-168    	; 0x132 <driveControl+0x8>
 1da:	75 d0       	rcall	.+234    	; 0x2c6 <carStop>
	//playStop();
	//
	//turnOffUnder();
	//turnOffFront();
	//turnOffRear();
	counter = 0;
 1dc:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <__bss_end>
 1e0:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
 1e4:	df 91       	pop	r29
 1e6:	cf 91       	pop	r28
 1e8:	08 95       	ret

000001ea <initSwitchPort>:
 1ea:	11 b8       	out	0x01, r1	; 1
 1ec:	08 95       	ret

000001ee <switchOn>:
 1ee:	88 30       	cpi	r24, 0x08	; 8
 1f0:	58 f4       	brcc	.+22     	; 0x208 <switchOn+0x1a>
 1f2:	21 e0       	ldi	r18, 0x01	; 1
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <switchOn+0xe>
 1f8:	22 0f       	add	r18, r18
 1fa:	33 1f       	adc	r19, r19
 1fc:	8a 95       	dec	r24
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <switchOn+0xa>
 200:	80 b1       	in	r24, 0x00	; 0
 202:	80 95       	com	r24
 204:	82 23       	and	r24, r18
 206:	08 95       	ret
 208:	80 e0       	ldi	r24, 0x00	; 0
 20a:	08 95       	ret

0000020c <initFrontLight>:
#include "frontlight.h"
#include <avr/io.h>

void initFrontLight (void)
{
	PORTA = 0;
 20c:	12 b8       	out	0x02, r1	; 2
	DDRA = 0xFF; // Gør alle A pins til udgange
 20e:	8f ef       	ldi	r24, 0xFF	; 255
 210:	81 b9       	out	0x01, r24	; 1
 212:	08 95       	ret

00000214 <__vector_3>:
unsigned char detection = 0;


//Initialiser interrupt counter - husk playReflex();
ISR(INT2_vect) //refleks registreret
{
 214:	1f 92       	push	r1
 216:	0f 92       	push	r0
 218:	0f b6       	in	r0, 0x3f	; 63
 21a:	0f 92       	push	r0
 21c:	11 24       	eor	r1, r1
 21e:	8f 93       	push	r24
	counter++;
 220:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 224:	8f 5f       	subi	r24, 0xFF	; 255
 226:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
		////playReflex();
		//detection = 1;
		//TCNT1 = 34286;
		//TCCR1B |= 0b00000101;
	//}
}
 22a:	8f 91       	pop	r24
 22c:	0f 90       	pop	r0
 22e:	0f be       	out	0x3f, r0	; 63
 230:	0f 90       	pop	r0
 232:	1f 90       	pop	r1
 234:	18 95       	reti

00000236 <__vector_45>:

ISR(TIMER4_OVF_vect) //0,5s delay til bremselys
{
 236:	1f 92       	push	r1
 238:	0f 92       	push	r0
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	0f 92       	push	r0
 23e:	11 24       	eor	r1, r1
 240:	0b b6       	in	r0, 0x3b	; 59
 242:	0f 92       	push	r0
 244:	2f 93       	push	r18
 246:	3f 93       	push	r19
 248:	4f 93       	push	r20
 24a:	5f 93       	push	r21
 24c:	6f 93       	push	r22
 24e:	7f 93       	push	r23
 250:	8f 93       	push	r24
 252:	9f 93       	push	r25
 254:	af 93       	push	r26
 256:	bf 93       	push	r27
 258:	ef 93       	push	r30
 25a:	ff 93       	push	r31
	turnOnRearLightDrive();
 25c:	2b d1       	rcall	.+598    	; 0x4b4 <turnOnRearLightDrive>
	TCCR4B = 0b00000000;
 25e:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
}
 262:	ff 91       	pop	r31
 264:	ef 91       	pop	r30
 266:	bf 91       	pop	r27
 268:	af 91       	pop	r26
 26a:	9f 91       	pop	r25
 26c:	8f 91       	pop	r24
 26e:	7f 91       	pop	r23
 270:	6f 91       	pop	r22
 272:	5f 91       	pop	r21
 274:	4f 91       	pop	r20
 276:	3f 91       	pop	r19
 278:	2f 91       	pop	r18
 27a:	0f 90       	pop	r0
 27c:	0b be       	out	0x3b, r0	; 59
 27e:	0f 90       	pop	r0
 280:	0f be       	out	0x3f, r0	; 63
 282:	0f 90       	pop	r0
 284:	1f 90       	pop	r1
 286:	18 95       	reti

00000288 <main>:



int main(void)
{
	sei();
 288:	78 94       	sei
	EIMSK=0b00000100;
 28a:	84 e0       	ldi	r24, 0x04	; 4
 28c:	8d bb       	out	0x1d, r24	; 29
	EICRA=0b00110000;
 28e:	80 e3       	ldi	r24, 0x30	; 48
 290:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
	
	//Timer til reflex
	//TCCR1A = 0b00000000;
	//TCCR1B = 0b00000000;
	
	initSystem();
 294:	45 df       	rcall	.-374    	; 0x120 <initSystem>
	counter = 0;
 296:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
	
    while (1) 
    {
		if (switchOn(1) != 0)
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	a8 df       	rcall	.-176    	; 0x1ee <switchOn>
 29e:	88 23       	and	r24, r24
		{
			driveControl(); //start driveControl / System
 2a0:	e1 f3       	breq	.-8      	; 0x29a <main+0x12>
 2a2:	43 df       	rcall	.-378    	; 0x12a <driveControl>
 2a4:	fa cf       	rjmp	.-12     	; 0x29a <main+0x12>

000002a6 <initMotor>:
 2a6:	8f ef       	ldi	r24, 0xFF	; 255
 2a8:	93 e0       	ldi	r25, 0x03	; 3
 2aa:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 2ae:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 2b2:	83 ec       	ldi	r24, 0xC3	; 195
 2b4:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
 2b8:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
 2bc:	8f ef       	ldi	r24, 0xFF	; 255
 2be:	84 b9       	out	0x04, r24	; 4
 2c0:	88 e0       	ldi	r24, 0x08	; 8
 2c2:	85 b9       	out	0x05, r24	; 5
 2c4:	08 95       	ret

000002c6 <carStop>:
 2c6:	0d c0       	rjmp	.+26     	; 0x2e2 <carStop+0x1c>
 2c8:	e8 e8       	ldi	r30, 0x88	; 136
 2ca:	f0 e0       	ldi	r31, 0x00	; 0
 2cc:	80 81       	ld	r24, Z
 2ce:	91 81       	ldd	r25, Z+1	; 0x01
 2d0:	01 96       	adiw	r24, 0x01	; 1
 2d2:	91 83       	std	Z+1, r25	; 0x01
 2d4:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2d6:	8f e3       	ldi	r24, 0x3F	; 63
 2d8:	9f e1       	ldi	r25, 0x1F	; 31
 2da:	01 97       	sbiw	r24, 0x01	; 1
 2dc:	f1 f7       	brne	.-4      	; 0x2da <carStop+0x14>
 2de:	00 c0       	rjmp	.+0      	; 0x2e0 <carStop+0x1a>
 2e0:	00 00       	nop
 2e2:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 2e6:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 2ea:	8f 3f       	cpi	r24, 0xFF	; 255
 2ec:	93 40       	sbci	r25, 0x03	; 3
 2ee:	61 f7       	brne	.-40     	; 0x2c8 <carStop+0x2>
 2f0:	e1 e8       	ldi	r30, 0x81	; 129
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	88 7f       	andi	r24, 0xF8	; 248
 2f8:	80 83       	st	Z, r24
 2fa:	08 95       	ret

000002fc <delay_ms>:
 2fc:	07 c0       	rjmp	.+14     	; 0x30c <delay_ms+0x10>
 2fe:	81 50       	subi	r24, 0x01	; 1
 300:	ef e9       	ldi	r30, 0x9F	; 159
 302:	ff e0       	ldi	r31, 0x0F	; 15
 304:	31 97       	sbiw	r30, 0x01	; 1
 306:	f1 f7       	brne	.-4      	; 0x304 <delay_ms+0x8>
 308:	00 c0       	rjmp	.+0      	; 0x30a <delay_ms+0xe>
 30a:	00 00       	nop
 30c:	81 11       	cpse	r24, r1
 30e:	f7 cf       	rjmp	.-18     	; 0x2fe <delay_ms+0x2>
 310:	08 95       	ret

00000312 <carDrive>:
 312:	bf 92       	push	r11
 314:	cf 92       	push	r12
 316:	df 92       	push	r13
 318:	ef 92       	push	r14
 31a:	ff 92       	push	r15
 31c:	0f 93       	push	r16
 31e:	1f 93       	push	r17
 320:	cf 93       	push	r28
 322:	df 93       	push	r29
 324:	1f 92       	push	r1
 326:	1f 92       	push	r1
 328:	cd b7       	in	r28, 0x3d	; 61
 32a:	de b7       	in	r29, 0x3e	; 62
 32c:	8c 01       	movw	r16, r24
 32e:	b6 2e       	mov	r11, r22
 330:	84 36       	cpi	r24, 0x64	; 100
 332:	91 05       	cpc	r25, r1
 334:	11 f4       	brne	.+4      	; 0x33a <carDrive+0x28>
 336:	03 e6       	ldi	r16, 0x63	; 99
 338:	10 e0       	ldi	r17, 0x00	; 0
 33a:	00 9f       	mul	r16, r16
 33c:	60 01       	movw	r12, r0
 33e:	01 9f       	mul	r16, r17
 340:	d0 0c       	add	r13, r0
 342:	d0 0c       	add	r13, r0
 344:	11 24       	eor	r1, r1
 346:	0d 2c       	mov	r0, r13
 348:	00 0c       	add	r0, r0
 34a:	ee 08       	sbc	r14, r14
 34c:	ff 08       	sbc	r15, r15
 34e:	c7 01       	movw	r24, r14
 350:	b6 01       	movw	r22, r12
 352:	52 d1       	rcall	.+676    	; 0x5f8 <__floatsisf>
 354:	44 d2       	rcall	.+1160   	; 0x7de <sqrt>
 356:	20 e0       	ldi	r18, 0x00	; 0
 358:	30 e0       	ldi	r19, 0x00	; 0
 35a:	40 e2       	ldi	r20, 0x20	; 32
 35c:	51 e4       	ldi	r21, 0x41	; 65
 35e:	d8 d1       	rcall	.+944    	; 0x710 <__mulsf3>
 360:	9b 01       	movw	r18, r22
 362:	ac 01       	movw	r20, r24
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	70 ec       	ldi	r23, 0xC0	; 192
 368:	8f e7       	ldi	r24, 0x7F	; 127
 36a:	94 e4       	ldi	r25, 0x44	; 68
 36c:	ad d0       	rcall	.+346    	; 0x4c8 <__subsf3>
 36e:	11 d1       	rcall	.+546    	; 0x592 <__fixsfsi>
 370:	7a 83       	std	Y+2, r23	; 0x02
 372:	69 83       	std	Y+1, r22	; 0x01
 374:	01 15       	cp	r16, r1
 376:	11 05       	cpc	r17, r1
 378:	11 f4       	brne	.+4      	; 0x37e <carDrive+0x6c>
 37a:	a5 df       	rcall	.-182    	; 0x2c6 <carStop>
 37c:	85 c0       	rjmp	.+266    	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 37e:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
 382:	81 fd       	sbrc	r24, 1
 384:	05 c0       	rjmp	.+10     	; 0x390 <carDrive+0x7e>
 386:	e1 e8       	ldi	r30, 0x81	; 129
 388:	f0 e0       	ldi	r31, 0x00	; 0
 38a:	80 81       	ld	r24, Z
 38c:	82 60       	ori	r24, 0x02	; 2
 38e:	80 83       	st	Z, r24
 390:	11 23       	and	r17, r17
 392:	0c f0       	brlt	.+2      	; 0x396 <carDrive+0x84>
 394:	3d c0       	rjmp	.+122    	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 396:	85 b1       	in	r24, 0x05	; 5
 398:	88 30       	cpi	r24, 0x08	; 8
 39a:	99 f4       	brne	.+38     	; 0x3c2 <carDrive+0xb0>
 39c:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 3a0:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 3a4:	8f 3f       	cpi	r24, 0xFF	; 255
 3a6:	93 40       	sbci	r25, 0x03	; 3
 3a8:	11 f4       	brne	.+4      	; 0x3ae <carDrive+0x9c>
 3aa:	15 b8       	out	0x05, r1	; 5
 3ac:	6d c0       	rjmp	.+218    	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 3ae:	e8 e8       	ldi	r30, 0x88	; 136
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	80 81       	ld	r24, Z
 3b4:	91 81       	ldd	r25, Z+1	; 0x01
 3b6:	01 96       	adiw	r24, 0x01	; 1
 3b8:	91 83       	std	Z+1, r25	; 0x01
 3ba:	80 83       	st	Z, r24
 3bc:	8b 2d       	mov	r24, r11
 3be:	9e df       	rcall	.-196    	; 0x2fc <delay_ms>
 3c0:	63 c0       	rjmp	.+198    	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 3c2:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 3c6:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 3ca:	89 81       	ldd	r24, Y+1	; 0x01
 3cc:	9a 81       	ldd	r25, Y+2	; 0x02
 3ce:	28 17       	cp	r18, r24
 3d0:	39 07       	cpc	r19, r25
 3d2:	50 f4       	brcc	.+20     	; 0x3e8 <carDrive+0xd6>
 3d4:	e8 e8       	ldi	r30, 0x88	; 136
 3d6:	f0 e0       	ldi	r31, 0x00	; 0
 3d8:	80 81       	ld	r24, Z
 3da:	91 81       	ldd	r25, Z+1	; 0x01
 3dc:	01 96       	adiw	r24, 0x01	; 1
 3de:	91 83       	std	Z+1, r25	; 0x01
 3e0:	80 83       	st	Z, r24
 3e2:	8b 2d       	mov	r24, r11
 3e4:	8b df       	rcall	.-234    	; 0x2fc <delay_ms>
 3e6:	50 c0       	rjmp	.+160    	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 3e8:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 3ec:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 3f0:	89 81       	ldd	r24, Y+1	; 0x01
 3f2:	9a 81       	ldd	r25, Y+2	; 0x02
 3f4:	82 17       	cp	r24, r18
 3f6:	93 07       	cpc	r25, r19
 3f8:	08 f0       	brcs	.+2      	; 0x3fc <carDrive+0xea>
 3fa:	46 c0       	rjmp	.+140    	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 3fc:	e8 e8       	ldi	r30, 0x88	; 136
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	80 81       	ld	r24, Z
 402:	91 81       	ldd	r25, Z+1	; 0x01
 404:	01 97       	sbiw	r24, 0x01	; 1
 406:	91 83       	std	Z+1, r25	; 0x01
 408:	80 83       	st	Z, r24
 40a:	8b 2d       	mov	r24, r11
 40c:	77 df       	rcall	.-274    	; 0x2fc <delay_ms>
 40e:	3c c0       	rjmp	.+120    	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 410:	85 b1       	in	r24, 0x05	; 5
 412:	88 30       	cpi	r24, 0x08	; 8
 414:	31 f5       	brne	.+76     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 416:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 41a:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 41e:	89 81       	ldd	r24, Y+1	; 0x01
 420:	9a 81       	ldd	r25, Y+2	; 0x02
 422:	28 17       	cp	r18, r24
 424:	39 07       	cpc	r19, r25
 426:	50 f4       	brcc	.+20     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 428:	e8 e8       	ldi	r30, 0x88	; 136
 42a:	f0 e0       	ldi	r31, 0x00	; 0
 42c:	80 81       	ld	r24, Z
 42e:	91 81       	ldd	r25, Z+1	; 0x01
 430:	01 96       	adiw	r24, 0x01	; 1
 432:	91 83       	std	Z+1, r25	; 0x01
 434:	80 83       	st	Z, r24
 436:	8b 2d       	mov	r24, r11
 438:	61 df       	rcall	.-318    	; 0x2fc <delay_ms>
 43a:	26 c0       	rjmp	.+76     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 43c:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 440:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 444:	89 81       	ldd	r24, Y+1	; 0x01
 446:	9a 81       	ldd	r25, Y+2	; 0x02
 448:	82 17       	cp	r24, r18
 44a:	93 07       	cpc	r25, r19
 44c:	e8 f4       	brcc	.+58     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 44e:	e8 e8       	ldi	r30, 0x88	; 136
 450:	f0 e0       	ldi	r31, 0x00	; 0
 452:	80 81       	ld	r24, Z
 454:	91 81       	ldd	r25, Z+1	; 0x01
 456:	01 97       	sbiw	r24, 0x01	; 1
 458:	91 83       	std	Z+1, r25	; 0x01
 45a:	80 83       	st	Z, r24
 45c:	8b 2d       	mov	r24, r11
 45e:	4e df       	rcall	.-356    	; 0x2fc <delay_ms>
 460:	13 c0       	rjmp	.+38     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 462:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 466:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 46a:	8f 3f       	cpi	r24, 0xFF	; 255
 46c:	93 40       	sbci	r25, 0x03	; 3
 46e:	19 f4       	brne	.+6      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 470:	88 e0       	ldi	r24, 0x08	; 8
 472:	85 b9       	out	0x05, r24	; 5
 474:	09 c0       	rjmp	.+18     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 476:	e8 e8       	ldi	r30, 0x88	; 136
 478:	f0 e0       	ldi	r31, 0x00	; 0
 47a:	80 81       	ld	r24, Z
 47c:	91 81       	ldd	r25, Z+1	; 0x01
 47e:	01 96       	adiw	r24, 0x01	; 1
 480:	91 83       	std	Z+1, r25	; 0x01
 482:	80 83       	st	Z, r24
 484:	8b 2d       	mov	r24, r11
 486:	3a df       	rcall	.-396    	; 0x2fc <delay_ms>
 488:	0f 90       	pop	r0
 48a:	0f 90       	pop	r0
 48c:	df 91       	pop	r29
 48e:	cf 91       	pop	r28
 490:	1f 91       	pop	r17
 492:	0f 91       	pop	r16
 494:	ff 90       	pop	r15
 496:	ef 90       	pop	r14
 498:	df 90       	pop	r13
 49a:	cf 90       	pop	r12
 49c:	bf 90       	pop	r11
 49e:	08 95       	ret

000004a0 <initRearLight>:
 4a0:	83 e8       	ldi	r24, 0x83	; 131
		TCCR3B = 0b00000001;
		OCR3A=1023;
		TCCR4B = 0b00000101;
	}
	
	TCNT4 = 57724;
 4a2:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
 4a6:	10 92 91 00 	sts	0x0091, r1	; 0x800091 <__TEXT_REGION_LENGTH__+0x7c0091>
 4aa:	10 92 a0 00 	sts	0x00A0, r1	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
 4ae:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
 4b2:	08 95       	ret

000004b4 <turnOnRearLightDrive>:
}

void turnOnRearLightDrive (void)
{
	TCCR3B = 0b00000001;
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7c0091>
	OCR3A = 204;
 4ba:	8c ec       	ldi	r24, 0xCC	; 204
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
 4c2:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>
 4c6:	08 95       	ret

000004c8 <__subsf3>:
 4c8:	50 58       	subi	r21, 0x80	; 128

000004ca <__addsf3>:
 4ca:	bb 27       	eor	r27, r27
 4cc:	aa 27       	eor	r26, r26
 4ce:	0e d0       	rcall	.+28     	; 0x4ec <__addsf3x>
 4d0:	e5 c0       	rjmp	.+458    	; 0x69c <__fp_round>
 4d2:	d6 d0       	rcall	.+428    	; 0x680 <__fp_pscA>
 4d4:	30 f0       	brcs	.+12     	; 0x4e2 <__addsf3+0x18>
 4d6:	db d0       	rcall	.+438    	; 0x68e <__fp_pscB>
 4d8:	20 f0       	brcs	.+8      	; 0x4e2 <__addsf3+0x18>
 4da:	31 f4       	brne	.+12     	; 0x4e8 <__addsf3+0x1e>
 4dc:	9f 3f       	cpi	r25, 0xFF	; 255
 4de:	11 f4       	brne	.+4      	; 0x4e4 <__addsf3+0x1a>
 4e0:	1e f4       	brtc	.+6      	; 0x4e8 <__addsf3+0x1e>
 4e2:	cb c0       	rjmp	.+406    	; 0x67a <__fp_nan>
 4e4:	0e f4       	brtc	.+2      	; 0x4e8 <__addsf3+0x1e>
 4e6:	e0 95       	com	r30
 4e8:	e7 fb       	bst	r30, 7
 4ea:	c1 c0       	rjmp	.+386    	; 0x66e <__fp_inf>

000004ec <__addsf3x>:
 4ec:	e9 2f       	mov	r30, r25
 4ee:	e7 d0       	rcall	.+462    	; 0x6be <__fp_split3>
 4f0:	80 f3       	brcs	.-32     	; 0x4d2 <__addsf3+0x8>
 4f2:	ba 17       	cp	r27, r26
 4f4:	62 07       	cpc	r22, r18
 4f6:	73 07       	cpc	r23, r19
 4f8:	84 07       	cpc	r24, r20
 4fa:	95 07       	cpc	r25, r21
 4fc:	18 f0       	brcs	.+6      	; 0x504 <__addsf3x+0x18>
 4fe:	71 f4       	brne	.+28     	; 0x51c <__addsf3x+0x30>
 500:	9e f5       	brtc	.+102    	; 0x568 <__addsf3x+0x7c>
 502:	ff c0       	rjmp	.+510    	; 0x702 <__fp_zero>
 504:	0e f4       	brtc	.+2      	; 0x508 <__addsf3x+0x1c>
 506:	e0 95       	com	r30
 508:	0b 2e       	mov	r0, r27
 50a:	ba 2f       	mov	r27, r26
 50c:	a0 2d       	mov	r26, r0
 50e:	0b 01       	movw	r0, r22
 510:	b9 01       	movw	r22, r18
 512:	90 01       	movw	r18, r0
 514:	0c 01       	movw	r0, r24
 516:	ca 01       	movw	r24, r20
 518:	a0 01       	movw	r20, r0
 51a:	11 24       	eor	r1, r1
 51c:	ff 27       	eor	r31, r31
 51e:	59 1b       	sub	r21, r25
 520:	99 f0       	breq	.+38     	; 0x548 <__addsf3x+0x5c>
 522:	59 3f       	cpi	r21, 0xF9	; 249
 524:	50 f4       	brcc	.+20     	; 0x53a <__addsf3x+0x4e>
 526:	50 3e       	cpi	r21, 0xE0	; 224
 528:	68 f1       	brcs	.+90     	; 0x584 <__addsf3x+0x98>
 52a:	1a 16       	cp	r1, r26
 52c:	f0 40       	sbci	r31, 0x00	; 0
 52e:	a2 2f       	mov	r26, r18
 530:	23 2f       	mov	r18, r19
 532:	34 2f       	mov	r19, r20
 534:	44 27       	eor	r20, r20
 536:	58 5f       	subi	r21, 0xF8	; 248
 538:	f3 cf       	rjmp	.-26     	; 0x520 <__addsf3x+0x34>
 53a:	46 95       	lsr	r20
 53c:	37 95       	ror	r19
 53e:	27 95       	ror	r18
 540:	a7 95       	ror	r26
 542:	f0 40       	sbci	r31, 0x00	; 0
 544:	53 95       	inc	r21
 546:	c9 f7       	brne	.-14     	; 0x53a <__addsf3x+0x4e>
 548:	7e f4       	brtc	.+30     	; 0x568 <__addsf3x+0x7c>
 54a:	1f 16       	cp	r1, r31
 54c:	ba 0b       	sbc	r27, r26
 54e:	62 0b       	sbc	r22, r18
 550:	73 0b       	sbc	r23, r19
 552:	84 0b       	sbc	r24, r20
 554:	ba f0       	brmi	.+46     	; 0x584 <__addsf3x+0x98>
 556:	91 50       	subi	r25, 0x01	; 1
 558:	a1 f0       	breq	.+40     	; 0x582 <__addsf3x+0x96>
 55a:	ff 0f       	add	r31, r31
 55c:	bb 1f       	adc	r27, r27
 55e:	66 1f       	adc	r22, r22
 560:	77 1f       	adc	r23, r23
 562:	88 1f       	adc	r24, r24
 564:	c2 f7       	brpl	.-16     	; 0x556 <__addsf3x+0x6a>
 566:	0e c0       	rjmp	.+28     	; 0x584 <__addsf3x+0x98>
 568:	ba 0f       	add	r27, r26
 56a:	62 1f       	adc	r22, r18
 56c:	73 1f       	adc	r23, r19
 56e:	84 1f       	adc	r24, r20
 570:	48 f4       	brcc	.+18     	; 0x584 <__addsf3x+0x98>
 572:	87 95       	ror	r24
 574:	77 95       	ror	r23
 576:	67 95       	ror	r22
 578:	b7 95       	ror	r27
 57a:	f7 95       	ror	r31
 57c:	9e 3f       	cpi	r25, 0xFE	; 254
 57e:	08 f0       	brcs	.+2      	; 0x582 <__addsf3x+0x96>
 580:	b3 cf       	rjmp	.-154    	; 0x4e8 <__addsf3+0x1e>
 582:	93 95       	inc	r25
 584:	88 0f       	add	r24, r24
 586:	08 f0       	brcs	.+2      	; 0x58a <__addsf3x+0x9e>
 588:	99 27       	eor	r25, r25
 58a:	ee 0f       	add	r30, r30
 58c:	97 95       	ror	r25
 58e:	87 95       	ror	r24
 590:	08 95       	ret

00000592 <__fixsfsi>:
 592:	04 d0       	rcall	.+8      	; 0x59c <__fixunssfsi>
 594:	68 94       	set
 596:	b1 11       	cpse	r27, r1
 598:	b5 c0       	rjmp	.+362    	; 0x704 <__fp_szero>
 59a:	08 95       	ret

0000059c <__fixunssfsi>:
 59c:	98 d0       	rcall	.+304    	; 0x6ce <__fp_splitA>
 59e:	88 f0       	brcs	.+34     	; 0x5c2 <__fixunssfsi+0x26>
 5a0:	9f 57       	subi	r25, 0x7F	; 127
 5a2:	90 f0       	brcs	.+36     	; 0x5c8 <__fixunssfsi+0x2c>
 5a4:	b9 2f       	mov	r27, r25
 5a6:	99 27       	eor	r25, r25
 5a8:	b7 51       	subi	r27, 0x17	; 23
 5aa:	a0 f0       	brcs	.+40     	; 0x5d4 <__fixunssfsi+0x38>
 5ac:	d1 f0       	breq	.+52     	; 0x5e2 <__fixunssfsi+0x46>
 5ae:	66 0f       	add	r22, r22
 5b0:	77 1f       	adc	r23, r23
 5b2:	88 1f       	adc	r24, r24
 5b4:	99 1f       	adc	r25, r25
 5b6:	1a f0       	brmi	.+6      	; 0x5be <__fixunssfsi+0x22>
 5b8:	ba 95       	dec	r27
 5ba:	c9 f7       	brne	.-14     	; 0x5ae <__fixunssfsi+0x12>
 5bc:	12 c0       	rjmp	.+36     	; 0x5e2 <__fixunssfsi+0x46>
 5be:	b1 30       	cpi	r27, 0x01	; 1
 5c0:	81 f0       	breq	.+32     	; 0x5e2 <__fixunssfsi+0x46>
 5c2:	9f d0       	rcall	.+318    	; 0x702 <__fp_zero>
 5c4:	b1 e0       	ldi	r27, 0x01	; 1
 5c6:	08 95       	ret
 5c8:	9c c0       	rjmp	.+312    	; 0x702 <__fp_zero>
 5ca:	67 2f       	mov	r22, r23
 5cc:	78 2f       	mov	r23, r24
 5ce:	88 27       	eor	r24, r24
 5d0:	b8 5f       	subi	r27, 0xF8	; 248
 5d2:	39 f0       	breq	.+14     	; 0x5e2 <__fixunssfsi+0x46>
 5d4:	b9 3f       	cpi	r27, 0xF9	; 249
 5d6:	cc f3       	brlt	.-14     	; 0x5ca <__fixunssfsi+0x2e>
 5d8:	86 95       	lsr	r24
 5da:	77 95       	ror	r23
 5dc:	67 95       	ror	r22
 5de:	b3 95       	inc	r27
 5e0:	d9 f7       	brne	.-10     	; 0x5d8 <__fixunssfsi+0x3c>
 5e2:	3e f4       	brtc	.+14     	; 0x5f2 <__fixunssfsi+0x56>
 5e4:	90 95       	com	r25
 5e6:	80 95       	com	r24
 5e8:	70 95       	com	r23
 5ea:	61 95       	neg	r22
 5ec:	7f 4f       	sbci	r23, 0xFF	; 255
 5ee:	8f 4f       	sbci	r24, 0xFF	; 255
 5f0:	9f 4f       	sbci	r25, 0xFF	; 255
 5f2:	08 95       	ret

000005f4 <__floatunsisf>:
 5f4:	e8 94       	clt
 5f6:	09 c0       	rjmp	.+18     	; 0x60a <__floatsisf+0x12>

000005f8 <__floatsisf>:
 5f8:	97 fb       	bst	r25, 7
 5fa:	3e f4       	brtc	.+14     	; 0x60a <__floatsisf+0x12>
 5fc:	90 95       	com	r25
 5fe:	80 95       	com	r24
 600:	70 95       	com	r23
 602:	61 95       	neg	r22
 604:	7f 4f       	sbci	r23, 0xFF	; 255
 606:	8f 4f       	sbci	r24, 0xFF	; 255
 608:	9f 4f       	sbci	r25, 0xFF	; 255
 60a:	99 23       	and	r25, r25
 60c:	a9 f0       	breq	.+42     	; 0x638 <__floatsisf+0x40>
 60e:	f9 2f       	mov	r31, r25
 610:	96 e9       	ldi	r25, 0x96	; 150
 612:	bb 27       	eor	r27, r27
 614:	93 95       	inc	r25
 616:	f6 95       	lsr	r31
 618:	87 95       	ror	r24
 61a:	77 95       	ror	r23
 61c:	67 95       	ror	r22
 61e:	b7 95       	ror	r27
 620:	f1 11       	cpse	r31, r1
 622:	f8 cf       	rjmp	.-16     	; 0x614 <__floatsisf+0x1c>
 624:	fa f4       	brpl	.+62     	; 0x664 <__floatsisf+0x6c>
 626:	bb 0f       	add	r27, r27
 628:	11 f4       	brne	.+4      	; 0x62e <__floatsisf+0x36>
 62a:	60 ff       	sbrs	r22, 0
 62c:	1b c0       	rjmp	.+54     	; 0x664 <__floatsisf+0x6c>
 62e:	6f 5f       	subi	r22, 0xFF	; 255
 630:	7f 4f       	sbci	r23, 0xFF	; 255
 632:	8f 4f       	sbci	r24, 0xFF	; 255
 634:	9f 4f       	sbci	r25, 0xFF	; 255
 636:	16 c0       	rjmp	.+44     	; 0x664 <__floatsisf+0x6c>
 638:	88 23       	and	r24, r24
 63a:	11 f0       	breq	.+4      	; 0x640 <__floatsisf+0x48>
 63c:	96 e9       	ldi	r25, 0x96	; 150
 63e:	11 c0       	rjmp	.+34     	; 0x662 <__floatsisf+0x6a>
 640:	77 23       	and	r23, r23
 642:	21 f0       	breq	.+8      	; 0x64c <__floatsisf+0x54>
 644:	9e e8       	ldi	r25, 0x8E	; 142
 646:	87 2f       	mov	r24, r23
 648:	76 2f       	mov	r23, r22
 64a:	05 c0       	rjmp	.+10     	; 0x656 <__floatsisf+0x5e>
 64c:	66 23       	and	r22, r22
 64e:	71 f0       	breq	.+28     	; 0x66c <__floatsisf+0x74>
 650:	96 e8       	ldi	r25, 0x86	; 134
 652:	86 2f       	mov	r24, r22
 654:	70 e0       	ldi	r23, 0x00	; 0
 656:	60 e0       	ldi	r22, 0x00	; 0
 658:	2a f0       	brmi	.+10     	; 0x664 <__floatsisf+0x6c>
 65a:	9a 95       	dec	r25
 65c:	66 0f       	add	r22, r22
 65e:	77 1f       	adc	r23, r23
 660:	88 1f       	adc	r24, r24
 662:	da f7       	brpl	.-10     	; 0x65a <__floatsisf+0x62>
 664:	88 0f       	add	r24, r24
 666:	96 95       	lsr	r25
 668:	87 95       	ror	r24
 66a:	97 f9       	bld	r25, 7
 66c:	08 95       	ret

0000066e <__fp_inf>:
 66e:	97 f9       	bld	r25, 7
 670:	9f 67       	ori	r25, 0x7F	; 127
 672:	80 e8       	ldi	r24, 0x80	; 128
 674:	70 e0       	ldi	r23, 0x00	; 0
 676:	60 e0       	ldi	r22, 0x00	; 0
 678:	08 95       	ret

0000067a <__fp_nan>:
 67a:	9f ef       	ldi	r25, 0xFF	; 255
 67c:	80 ec       	ldi	r24, 0xC0	; 192
 67e:	08 95       	ret

00000680 <__fp_pscA>:
 680:	00 24       	eor	r0, r0
 682:	0a 94       	dec	r0
 684:	16 16       	cp	r1, r22
 686:	17 06       	cpc	r1, r23
 688:	18 06       	cpc	r1, r24
 68a:	09 06       	cpc	r0, r25
 68c:	08 95       	ret

0000068e <__fp_pscB>:
 68e:	00 24       	eor	r0, r0
 690:	0a 94       	dec	r0
 692:	12 16       	cp	r1, r18
 694:	13 06       	cpc	r1, r19
 696:	14 06       	cpc	r1, r20
 698:	05 06       	cpc	r0, r21
 69a:	08 95       	ret

0000069c <__fp_round>:
 69c:	09 2e       	mov	r0, r25
 69e:	03 94       	inc	r0
 6a0:	00 0c       	add	r0, r0
 6a2:	11 f4       	brne	.+4      	; 0x6a8 <__fp_round+0xc>
 6a4:	88 23       	and	r24, r24
 6a6:	52 f0       	brmi	.+20     	; 0x6bc <__fp_round+0x20>
 6a8:	bb 0f       	add	r27, r27
 6aa:	40 f4       	brcc	.+16     	; 0x6bc <__fp_round+0x20>
 6ac:	bf 2b       	or	r27, r31
 6ae:	11 f4       	brne	.+4      	; 0x6b4 <__fp_round+0x18>
 6b0:	60 ff       	sbrs	r22, 0
 6b2:	04 c0       	rjmp	.+8      	; 0x6bc <__fp_round+0x20>
 6b4:	6f 5f       	subi	r22, 0xFF	; 255
 6b6:	7f 4f       	sbci	r23, 0xFF	; 255
 6b8:	8f 4f       	sbci	r24, 0xFF	; 255
 6ba:	9f 4f       	sbci	r25, 0xFF	; 255
 6bc:	08 95       	ret

000006be <__fp_split3>:
 6be:	57 fd       	sbrc	r21, 7
 6c0:	90 58       	subi	r25, 0x80	; 128
 6c2:	44 0f       	add	r20, r20
 6c4:	55 1f       	adc	r21, r21
 6c6:	59 f0       	breq	.+22     	; 0x6de <__fp_splitA+0x10>
 6c8:	5f 3f       	cpi	r21, 0xFF	; 255
 6ca:	71 f0       	breq	.+28     	; 0x6e8 <__fp_splitA+0x1a>
 6cc:	47 95       	ror	r20

000006ce <__fp_splitA>:
 6ce:	88 0f       	add	r24, r24
 6d0:	97 fb       	bst	r25, 7
 6d2:	99 1f       	adc	r25, r25
 6d4:	61 f0       	breq	.+24     	; 0x6ee <__fp_splitA+0x20>
 6d6:	9f 3f       	cpi	r25, 0xFF	; 255
 6d8:	79 f0       	breq	.+30     	; 0x6f8 <__fp_splitA+0x2a>
 6da:	87 95       	ror	r24
 6dc:	08 95       	ret
 6de:	12 16       	cp	r1, r18
 6e0:	13 06       	cpc	r1, r19
 6e2:	14 06       	cpc	r1, r20
 6e4:	55 1f       	adc	r21, r21
 6e6:	f2 cf       	rjmp	.-28     	; 0x6cc <__fp_split3+0xe>
 6e8:	46 95       	lsr	r20
 6ea:	f1 df       	rcall	.-30     	; 0x6ce <__fp_splitA>
 6ec:	08 c0       	rjmp	.+16     	; 0x6fe <__fp_splitA+0x30>
 6ee:	16 16       	cp	r1, r22
 6f0:	17 06       	cpc	r1, r23
 6f2:	18 06       	cpc	r1, r24
 6f4:	99 1f       	adc	r25, r25
 6f6:	f1 cf       	rjmp	.-30     	; 0x6da <__fp_splitA+0xc>
 6f8:	86 95       	lsr	r24
 6fa:	71 05       	cpc	r23, r1
 6fc:	61 05       	cpc	r22, r1
 6fe:	08 94       	sec
 700:	08 95       	ret

00000702 <__fp_zero>:
 702:	e8 94       	clt

00000704 <__fp_szero>:
 704:	bb 27       	eor	r27, r27
 706:	66 27       	eor	r22, r22
 708:	77 27       	eor	r23, r23
 70a:	cb 01       	movw	r24, r22
 70c:	97 f9       	bld	r25, 7
 70e:	08 95       	ret

00000710 <__mulsf3>:
 710:	0b d0       	rcall	.+22     	; 0x728 <__mulsf3x>
 712:	c4 cf       	rjmp	.-120    	; 0x69c <__fp_round>
 714:	b5 df       	rcall	.-150    	; 0x680 <__fp_pscA>
 716:	28 f0       	brcs	.+10     	; 0x722 <__mulsf3+0x12>
 718:	ba df       	rcall	.-140    	; 0x68e <__fp_pscB>
 71a:	18 f0       	brcs	.+6      	; 0x722 <__mulsf3+0x12>
 71c:	95 23       	and	r25, r21
 71e:	09 f0       	breq	.+2      	; 0x722 <__mulsf3+0x12>
 720:	a6 cf       	rjmp	.-180    	; 0x66e <__fp_inf>
 722:	ab cf       	rjmp	.-170    	; 0x67a <__fp_nan>
 724:	11 24       	eor	r1, r1
 726:	ee cf       	rjmp	.-36     	; 0x704 <__fp_szero>

00000728 <__mulsf3x>:
 728:	ca df       	rcall	.-108    	; 0x6be <__fp_split3>
 72a:	a0 f3       	brcs	.-24     	; 0x714 <__mulsf3+0x4>

0000072c <__mulsf3_pse>:
 72c:	95 9f       	mul	r25, r21
 72e:	d1 f3       	breq	.-12     	; 0x724 <__mulsf3+0x14>
 730:	95 0f       	add	r25, r21
 732:	50 e0       	ldi	r21, 0x00	; 0
 734:	55 1f       	adc	r21, r21
 736:	62 9f       	mul	r22, r18
 738:	f0 01       	movw	r30, r0
 73a:	72 9f       	mul	r23, r18
 73c:	bb 27       	eor	r27, r27
 73e:	f0 0d       	add	r31, r0
 740:	b1 1d       	adc	r27, r1
 742:	63 9f       	mul	r22, r19
 744:	aa 27       	eor	r26, r26
 746:	f0 0d       	add	r31, r0
 748:	b1 1d       	adc	r27, r1
 74a:	aa 1f       	adc	r26, r26
 74c:	64 9f       	mul	r22, r20
 74e:	66 27       	eor	r22, r22
 750:	b0 0d       	add	r27, r0
 752:	a1 1d       	adc	r26, r1
 754:	66 1f       	adc	r22, r22
 756:	82 9f       	mul	r24, r18
 758:	22 27       	eor	r18, r18
 75a:	b0 0d       	add	r27, r0
 75c:	a1 1d       	adc	r26, r1
 75e:	62 1f       	adc	r22, r18
 760:	73 9f       	mul	r23, r19
 762:	b0 0d       	add	r27, r0
 764:	a1 1d       	adc	r26, r1
 766:	62 1f       	adc	r22, r18
 768:	83 9f       	mul	r24, r19
 76a:	a0 0d       	add	r26, r0
 76c:	61 1d       	adc	r22, r1
 76e:	22 1f       	adc	r18, r18
 770:	74 9f       	mul	r23, r20
 772:	33 27       	eor	r19, r19
 774:	a0 0d       	add	r26, r0
 776:	61 1d       	adc	r22, r1
 778:	23 1f       	adc	r18, r19
 77a:	84 9f       	mul	r24, r20
 77c:	60 0d       	add	r22, r0
 77e:	21 1d       	adc	r18, r1
 780:	82 2f       	mov	r24, r18
 782:	76 2f       	mov	r23, r22
 784:	6a 2f       	mov	r22, r26
 786:	11 24       	eor	r1, r1
 788:	9f 57       	subi	r25, 0x7F	; 127
 78a:	50 40       	sbci	r21, 0x00	; 0
 78c:	8a f0       	brmi	.+34     	; 0x7b0 <__mulsf3_pse+0x84>
 78e:	e1 f0       	breq	.+56     	; 0x7c8 <__mulsf3_pse+0x9c>
 790:	88 23       	and	r24, r24
 792:	4a f0       	brmi	.+18     	; 0x7a6 <__mulsf3_pse+0x7a>
 794:	ee 0f       	add	r30, r30
 796:	ff 1f       	adc	r31, r31
 798:	bb 1f       	adc	r27, r27
 79a:	66 1f       	adc	r22, r22
 79c:	77 1f       	adc	r23, r23
 79e:	88 1f       	adc	r24, r24
 7a0:	91 50       	subi	r25, 0x01	; 1
 7a2:	50 40       	sbci	r21, 0x00	; 0
 7a4:	a9 f7       	brne	.-22     	; 0x790 <__mulsf3_pse+0x64>
 7a6:	9e 3f       	cpi	r25, 0xFE	; 254
 7a8:	51 05       	cpc	r21, r1
 7aa:	70 f0       	brcs	.+28     	; 0x7c8 <__mulsf3_pse+0x9c>
 7ac:	60 cf       	rjmp	.-320    	; 0x66e <__fp_inf>
 7ae:	aa cf       	rjmp	.-172    	; 0x704 <__fp_szero>
 7b0:	5f 3f       	cpi	r21, 0xFF	; 255
 7b2:	ec f3       	brlt	.-6      	; 0x7ae <__mulsf3_pse+0x82>
 7b4:	98 3e       	cpi	r25, 0xE8	; 232
 7b6:	dc f3       	brlt	.-10     	; 0x7ae <__mulsf3_pse+0x82>
 7b8:	86 95       	lsr	r24
 7ba:	77 95       	ror	r23
 7bc:	67 95       	ror	r22
 7be:	b7 95       	ror	r27
 7c0:	f7 95       	ror	r31
 7c2:	e7 95       	ror	r30
 7c4:	9f 5f       	subi	r25, 0xFF	; 255
 7c6:	c1 f7       	brne	.-16     	; 0x7b8 <__mulsf3_pse+0x8c>
 7c8:	fe 2b       	or	r31, r30
 7ca:	88 0f       	add	r24, r24
 7cc:	91 1d       	adc	r25, r1
 7ce:	96 95       	lsr	r25
 7d0:	87 95       	ror	r24
 7d2:	97 f9       	bld	r25, 7
 7d4:	08 95       	ret
 7d6:	11 f4       	brne	.+4      	; 0x7dc <__mulsf3_pse+0xb0>
 7d8:	0e f4       	brtc	.+2      	; 0x7dc <__mulsf3_pse+0xb0>
 7da:	4f cf       	rjmp	.-354    	; 0x67a <__fp_nan>
 7dc:	3e c0       	rjmp	.+124    	; 0x85a <__fp_mpack>

000007de <sqrt>:
 7de:	77 df       	rcall	.-274    	; 0x6ce <__fp_splitA>
 7e0:	d0 f3       	brcs	.-12     	; 0x7d6 <__mulsf3_pse+0xaa>
 7e2:	99 23       	and	r25, r25
 7e4:	d9 f3       	breq	.-10     	; 0x7dc <__mulsf3_pse+0xb0>
 7e6:	ce f3       	brts	.-14     	; 0x7da <__mulsf3_pse+0xae>
 7e8:	9f 57       	subi	r25, 0x7F	; 127
 7ea:	55 0b       	sbc	r21, r21
 7ec:	87 ff       	sbrs	r24, 7
 7ee:	43 d0       	rcall	.+134    	; 0x876 <__fp_norm2>
 7f0:	00 24       	eor	r0, r0
 7f2:	a0 e6       	ldi	r26, 0x60	; 96
 7f4:	40 ea       	ldi	r20, 0xA0	; 160
 7f6:	90 01       	movw	r18, r0
 7f8:	80 58       	subi	r24, 0x80	; 128
 7fa:	56 95       	lsr	r21
 7fc:	97 95       	ror	r25
 7fe:	28 f4       	brcc	.+10     	; 0x80a <sqrt+0x2c>
 800:	80 5c       	subi	r24, 0xC0	; 192
 802:	66 0f       	add	r22, r22
 804:	77 1f       	adc	r23, r23
 806:	88 1f       	adc	r24, r24
 808:	20 f0       	brcs	.+8      	; 0x812 <sqrt+0x34>
 80a:	26 17       	cp	r18, r22
 80c:	37 07       	cpc	r19, r23
 80e:	48 07       	cpc	r20, r24
 810:	30 f4       	brcc	.+12     	; 0x81e <sqrt+0x40>
 812:	62 1b       	sub	r22, r18
 814:	73 0b       	sbc	r23, r19
 816:	84 0b       	sbc	r24, r20
 818:	20 29       	or	r18, r0
 81a:	31 29       	or	r19, r1
 81c:	4a 2b       	or	r20, r26
 81e:	a6 95       	lsr	r26
 820:	17 94       	ror	r1
 822:	07 94       	ror	r0
 824:	20 25       	eor	r18, r0
 826:	31 25       	eor	r19, r1
 828:	4a 27       	eor	r20, r26
 82a:	58 f7       	brcc	.-42     	; 0x802 <sqrt+0x24>
 82c:	66 0f       	add	r22, r22
 82e:	77 1f       	adc	r23, r23
 830:	88 1f       	adc	r24, r24
 832:	20 f0       	brcs	.+8      	; 0x83c <sqrt+0x5e>
 834:	26 17       	cp	r18, r22
 836:	37 07       	cpc	r19, r23
 838:	48 07       	cpc	r20, r24
 83a:	30 f4       	brcc	.+12     	; 0x848 <sqrt+0x6a>
 83c:	62 0b       	sbc	r22, r18
 83e:	73 0b       	sbc	r23, r19
 840:	84 0b       	sbc	r24, r20
 842:	20 0d       	add	r18, r0
 844:	31 1d       	adc	r19, r1
 846:	41 1d       	adc	r20, r1
 848:	a0 95       	com	r26
 84a:	81 f7       	brne	.-32     	; 0x82c <sqrt+0x4e>
 84c:	b9 01       	movw	r22, r18
 84e:	84 2f       	mov	r24, r20
 850:	91 58       	subi	r25, 0x81	; 129
 852:	88 0f       	add	r24, r24
 854:	96 95       	lsr	r25
 856:	87 95       	ror	r24
 858:	08 95       	ret

0000085a <__fp_mpack>:
 85a:	9f 3f       	cpi	r25, 0xFF	; 255
 85c:	31 f0       	breq	.+12     	; 0x86a <__fp_mpack_finite+0xc>

0000085e <__fp_mpack_finite>:
 85e:	91 50       	subi	r25, 0x01	; 1
 860:	20 f4       	brcc	.+8      	; 0x86a <__fp_mpack_finite+0xc>
 862:	87 95       	ror	r24
 864:	77 95       	ror	r23
 866:	67 95       	ror	r22
 868:	b7 95       	ror	r27
 86a:	88 0f       	add	r24, r24
 86c:	91 1d       	adc	r25, r1
 86e:	96 95       	lsr	r25
 870:	87 95       	ror	r24
 872:	97 f9       	bld	r25, 7
 874:	08 95       	ret

00000876 <__fp_norm2>:
 876:	91 50       	subi	r25, 0x01	; 1
 878:	50 40       	sbci	r21, 0x00	; 0
 87a:	66 0f       	add	r22, r22
 87c:	77 1f       	adc	r23, r23
 87e:	88 1f       	adc	r24, r24
 880:	d2 f7       	brpl	.-12     	; 0x876 <__fp_norm2>
 882:	08 95       	ret

00000884 <__tablejump2__>:
 884:	ee 0f       	add	r30, r30
 886:	ff 1f       	adc	r31, r31
 888:	88 1f       	adc	r24, r24
 88a:	8b bf       	out	0x3b, r24	; 59
 88c:	07 90       	elpm	r0, Z+
 88e:	f6 91       	elpm	r31, Z
 890:	e0 2d       	mov	r30, r0
 892:	19 94       	eijmp

00000894 <_exit>:
 894:	f8 94       	cli

00000896 <__stop_program>:
 896:	ff cf       	rjmp	.-2      	; 0x896 <__stop_program>
